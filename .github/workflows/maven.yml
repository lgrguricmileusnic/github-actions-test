name: Java CI with Maven

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

env:
  DOCKER_IMG_NAME: data-rest-test
  DOCKER_DIR: /home/${{ secrets.SSH_USER }}/web-backend

jobs:
  build-and-deploy:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    - name: Set up JDK 17
      uses: actions/setup-java@v3
      with:
        java-version: '17'
        distribution: 'temurin'
        cache: maven
    - name: Build with Maven
      run: mvn -B package --file pom.xml
      
#     - name: Save image tar
#       run: docker save -o $DOCKER_IMG_NAME $DOCKER_IMG_NAME
      
    - name: Install SSH Key
      uses: shimataro/ssh-key-action@v2
      with:
        key: ${{ secrets.SSH_PRIVATE_KEY }} 
        known_hosts: 'placeholder'
        
    - name: Adding Known Hosts
      run: ssh-keyscan -H ${{ secrets.SSH_HOST }} >> ~/.ssh/known_hosts
      
    - name: Upload with rsync
      run: rsync -avz ./target/*.jar ./Dockerfile ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }}:$DOCKER_DIR/
      
#     - name: Load docker image
#       uses: appleboy/ssh-action@v0.1.8
#       with:
#         host: ${{ secrets.SSH_HOST }}
#         username: ${{ secrets.SSH_USER }}
#         key: ${{ secrets.SSH_PRIVATE_KEY }} 
#         envs: DOCKER_DIR,DOCKER_IMG_NAME
#         script: docker load -i $DOCKER_DIR/$DOCKER_IMG_NAME

    - name: Build the Docker image
      uses: appleboy/ssh-action@v0.1.8
      with:
        host: ${{ secrets.SSH_HOST }}
        username: ${{ secrets.SSH_USER }}
        key: ${{ secrets.SSH_PRIVATE_KEY }} 
        envs: DOCKER_DIR,DOCKER_IMG_NAME
        script: docker build $DOCKER_DIR --file $DOCKER_DIR/Dockerfile --tag $DOCKER_IMG_NAME

      
    - name: Run docker image
      uses: appleboy/ssh-action@v0.1.8
      with:
        host: ${{ secrets.SSH_HOST }}
        username: ${{ secrets.SSH_USER }}
        key: ${{ secrets.SSH_PRIVATE_KEY }}
        envs: DOCKER_IMG_NAME
        script: | 
          docker rm --force $(docker ps -a |  grep $DOCKER_IMG_NAME | tr -s " " | cut -d " " -f1) || echo "No containers running."
          docker run -d -p ${{ secrets.SSH_HOST }}:9000:8080 $DOCKER_IMG_NAME

      
